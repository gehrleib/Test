<?xml version="1.0" encoding="UTF-8"?>
<!--
  This stylesheet transforms the source XML into a list of "ArcherRecord" elements,
  identifying which records to create and which to retire based on a comparison
  of two lists in the source data.
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="xml" indent="yes"/>
  <xsl:strip-space elements="*"/>

  <!--
    Creates an index (a "key") for all Assessable Unit records.
    This allows for very fast lookups of a specific AU record using its contentId,
    which is much more efficient than searching the entire document each time.
  -->
  <xsl:key name="au-by-id" match="Record[@levelGuid='e1b271d7-fc99-4626-b2b0-ded2a3fcdcfb']" use="@contentId"/>

  <!--
    This is the first template that runs. It matches the root of the source XML document.
    Its job is to create the main <ArcherRecords> wrapper element and then start
    the transformation process by applying templates to the main LOB records.
  -->
  <xsl:template match="/">
    <ArcherRecords>
      <!-- Find all main Line of Business (LOB) records and process them using the template below. -->
      <xsl:apply-templates select="//Record[@levelGuid='a68e7a0f-de97-4abe-a8f2-d60c87fad3fc']"/>
    </ArcherRecords>
  </xsl:template>

  <!--
    This is the main template. It processes each Line of Business (LOB) record found by the template above.
    All the logic for comparing lists and generating output happens here.
  -->
  <xsl:template match="Record[@levelGuid='a68e7a0f-de97-4abe-a8f2-d60c87fad3fc']">
    <!-- Store the current LOB record and its ID in variables for easy access. -->
    <xsl:variable name="lob_record" select="."/>
    <xsl:variable name="lob_id" select="@contentId"/>
    
    <!-- ## Gather the Necessary Data Sets ## -->

    <!-- Defines the set of themes that SHOULD exist based on the LOB's 'Regulatory Theme' field. -->
    <xsl:variable name="lob_themes" select="$lob_record/Field[@guid='d38cab13-b434-45cc-8609-ec0751c8067b']/Reference"/>
    <xsl:variable name="lob_theme_names" select="$lob_themes/string()"/>
    
    <!-- Defines the set of themes that CURRENTLY exist by looking up the AUs in the 'Assessable Units' field. -->
    <xsl:variable name="active_au_refs" select="$lob_record/Field[@guid='86f249ea-2259-4682-980a-3b2816f915bd']/Reference"/>
    <!-- Use the key defined above to quickly get the full record for each active AU. -->
    <xsl:variable name="active_au_records" select="key('au-by-id', $active_au_refs/@id)"/>
    <xsl:variable name="active_au_themes" select="$active_au_records/Field[@guid='bdf34c57-76ff-42a6-b214-e2917e793d50']/string()"/>

    <!-- Get a list of ALL child AU records from the LOB, regardless of their active/retired status. -->
    <xsl:variable name="all_au_records" select="$lob_record/Record[@levelGuid='e1b271d7-fc99-4626-b2b0-ded2a3fcdcfb']"/>

    <!--
      ==================================================================
      ## Creations: Find themes in the LOB list that are not in the active AU list. ##
      ==================================================================
    -->
    <xsl:for-each select="$lob_themes[not(string(.) = $active_au_themes)]">
      <!-- Store the theme name we are about to create an AU for. -->
      <xsl:variable name="rt_name_to_create" select="string(.)"/>
      
      <!-- Create the output record for this creation event. -->
      <ArcherRecord>
        <LOB_RT_ID><xsl:value-of select="concat($lob_id, '-', @id)"/></LOB_RT_ID>
        <LOB_ID><xsl:value-of select="$lob_id"/></LOB_ID>
        <RT_ID><xsl:value-of select="@id"/></RT_ID>
        <LOB_RETIRED_ID/>
        <RT_RETIRED_ID/>
        <MT>
          <!--
            If we are creating an AU, check if an AU with this theme already exists but is retired.
            A "retired" AU is one that exists but is not in the "active_au_refs" list.
            If we find one, we "reactivate" it and carry over its M&T Plan IDs.
          -->
          <xsl:variable name="reactivated_au" select="$all_au_records[Field[@guid='bdf34c57-76ff-42a6-b214-e2917e793d50'] = $rt_name_to_create and not(@contentId = $active_au_refs/@id)]"/>
          
          <!-- Loop through all M&T Plan records of the reactivated AU and create an <MT_ID> for each. -->
          <xsl:for-each select="$reactivated_au/Record[@levelGuid='877e196d-27cd-488f-9c33-3ea0cd2a8561']">
            <MT_ID>
              <xsl:value-of select="Field[@guid='5fd374e6-81bc-47be-924a-b7c1f1892fed']"/>
            </MT_ID>
          </xsl:for-each>
        </MT>
      </ArcherRecord>
    </xsl:for-each>

    <!--
      =============================================================================
      ## Retirements: Find active AUs whose theme is no longer in the LOB's theme list. ##
      =============================================================================
    -->
    <xsl:for-each select="$active_au_records[not(Field[@guid='bdf34c57-76ff-42a6-b214-e2917e793d50']/string() = $lob_theme_names)]">
      <!-- Get the original Regulatory Theme ID from the AU's own cross-reference field. -->
      <xsl:variable name="retired_rt_id" select="Field[@guid='678713cc-bf0a-468e-92c3-8d19db98f36b']/Reference/@id"/>

      <!-- Create the output record for this retirement event. -->
      <ArcherRecord>
        <LOB_RT_ID><xsl:value-of select="concat($lob_id, '-', @contentId)"/></LOB_RT_ID>
        <LOB_ID/>
        <RT_ID/>
        <LOB_RETIRED_ID><xsl:value-of select="$lob_id"/></LOB_RETIRED_ID>
        <RT_RETIRED_ID><xsl:value-of select="$retired_rt_id"/></RT_RETIRED_ID>
        <MT>
          <!--
            For retiring AUs, we only want to keep a record of M&T Plans that meet specific criteria.
            The following loop selects only the M&T plan records where the status is 'Approved' AND
            the 'Exported to CALMA' field is 'Yes'.
          -->
          <xsl:for-each select="Record[@levelGuid='877e196d-27cd-488f-9c33-3ea0cd2a8561']
                                     [Field[@guid='8fe9b331-20fe-4642-864d-12ce1a384638']/ListValues/ListValue = 'Approved' and
                                      Field[@guid='0fd1978a-81e6-45cb-a8be-4b07d3cc463a']/ListValues/ListValue = 'Yes']">
            <MT_ID>
              <xsl:value-of select="Field[@guid='5fd374e6-81bc-47be-924a-b7c1f1892fed']"/>
            </MT_ID>
          </xsl:for-each>
        </MT>
      </ArcherRecord>
    </xsl:for-each>
  </template>

</xsl:stylesheet>
